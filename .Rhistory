everything(),#pivot the entire data, everything will be transformed
names_to = "name",
values_to = "estimate" #household counts in this case.
)%>%
# Use data dictionary acs_vars_2019_5yr to join names from dictionary with our data
left_join(
acs_vars_2019_1yr %>%
select(name,label) #we only want "name" and "label" in the dataset.
)%>%
separate( #separate, we don't need Estimate!!Total:!!
label, #it's called label from acs_vars_2019_5yr
into = c(NA, NA, NA,"education"),
sep = "!!"  #we re cognize the third one(after Total:!!) is income
)%>%
select(-name)%>%
filter(estimate>0)%>% # at this point we don't want name anymore
filter(!is.na(education))%>%# got rid of empty field "NA"
group_by(education)%>%
summarize(estimate = sum(estimate, na.rm=T))
}
)
View(bay_total_2019)
#B15002I = hispanic or Latino
#B15002H = white alone, not hispanic
#B15002B~G =
library(dplyr)
bay_total_2019<-
1:7 %>%
map_dfr(function(x){getCensus(
name = "acs/acs1", #five year survey
vintage = "2019",
region = "county: 081",#081= San Mateo  #all SF counties: 001,013,041,055,075, 081, 085, 095, 097
regionin = "state:06", #defining the state
vars = paste0("group(B15002", LETTERS[x],")")# SEX BY EDUCATIONAL ATTAINMENT FOR THE POPULATION 25 YEARS AND OVER (WHITE ALONE)
)%>%
select(ends_with("E") & -c(state,NAME))%>% # I only want columns that ends with "E" also get rid of state and NAME column; We want bay area total income from white. -c removes the field of state and NAME.
summarize_all(sum) %>%# we sum up all the columns; It's gotta be numbers
#we want to pivot the data into multiple rows and one column; make the dataset verticle
pivot_longer(
everything(),#pivot the entire data, everything will be transformed
names_to = "name",
values_to = "estimate" #household counts in this case.
)%>%
# Use data dictionary acs_vars_2019_5yr to join names from dictionary with our data
left_join(
acs_vars_2019_1yr %>%
select(name,label) #we only want "name" and "label" in the dataset.
)%>%
separate( #separate, we don't need Estimate!!Total:!!
label, #it's called label from acs_vars_2019_5yr
into = c(NA, NA, NA,"education"),
sep = "!!"  #we re cognize the third one(after Total:!!) is income
)%>%
select(-name)%>%
filter(estimate>0)%>% # at this point we don't want name anymore
filter(!is.na(education))%>%# got rid of empty field "NA"
group_by(education)%>%
summarize(estimate = sum(estimate, na.rm=T))
}
)
View(bay_total_2019)
#B15002I = hispanic or Latino
#B15002H = white alone, not hispanic
#B15002B~G =
library(dplyr)
bay_total_2019<-
1:7 %>%
map_dfr(function(x){getCensus(
name = "acs/acs1", #five year survey
vintage = "2019",
region = "county: 081",#081= San Mateo  #all SF counties: 001,013,041,055,075, 081, 085, 095, 097
regionin = "state:06", #defining the state
vars = paste0("group(B15002", LETTERS[x],")")# SEX BY EDUCATIONAL ATTAINMENT FOR THE POPULATION 25 YEARS AND OVER (WHITE ALONE)
)%>%
select(ends_with("E") & -c(state,NAME))%>% # I only want columns that ends with "E" also get rid of state and NAME column; We want bay area total income from white. -c removes the field of state and NAME.
summarize_all(sum) %>%# we sum up all the columns; It's gotta be numbers
#we want to pivot the data into multiple rows and one column; make the dataset verticle
pivot_longer(
everything(),#pivot the entire data, everything will be transformed
names_to = "name",
values_to = "estimate" #household counts in this case.
)%>%
# Use data dictionary acs_vars_2019_5yr to join names from dictionary with our data
left_join(
acs_vars_2019_1yr %>%
select(name,label) #we only want "name" and "label" in the dataset.
)%>%
separate( #separate, we don't need Estimate!!Total:!!
label, #it's called label from acs_vars_2019_5yr
into = c(NA, NA, NA,"education"),
sep = "!!"  #we re cognize the third one(after Total:!!) is income
)%>%
select(-name)%>%
filter(estimate>0)%>% # at this point we don't want name anymore
filter(!is.na(education))#%>%# got rid of empty field "NA"
#group_by(education)%>%
#summarize(estimate = sum(estimate, na.rm=T))
}
)
#B15002I = hispanic or Latino
#B15002H = white alone, not hispanic
#B15002B~G =
library(dplyr)
bay_total_2019<-
1:7 %>%
map_dfr(function(x){getCensus(
name = "acs/acs1", #five year survey
vintage = "2019",
region = "county: 081",#081= San Mateo  #all SF counties: 001,013,041,055,075, 081, 085, 095, 097
regionin = "state:06", #defining the state
vars = paste0("group(B15002", LETTERS[x],")")# SEX BY EDUCATIONAL ATTAINMENT FOR THE POPULATION 25 YEARS AND OVER (WHITE ALONE)
)%>%
select(ends_with("E") & -c(state,NAME))%>% # I only want columns that ends with "E" also get rid of state and NAME column; We want bay area total income from white. -c removes the field of state and NAME.
summarize_all(sum) %>%# we sum up all the columns; It's gotta be numbers
#we want to pivot the data into multiple rows and one column; make the dataset verticle
pivot_longer(
everything(),#pivot the entire data, everything will be transformed
names_to = "name",
values_to = "estimate" #household counts in this case.
)%>%
# Use data dictionary acs_vars_2019_5yr to join names from dictionary with our data
left_join(
acs_vars_2019_1yr %>%
select(name,label) #we only want "name" and "label" in the dataset.
)%>%
separate( #separate, we don't need Estimate!!Total:!!
label, #it's called label from acs_vars_2019_5yr
into = c(NA, NA, NA,"education"),
sep = "!!"  #we re cognize the third one(after Total:!!) is income
)%>%
select(-name)%>%
filter(estimate>0)%>% # at this point we don't want name anymore
filter(!is.na(education))%>%# got rid of empty field "NA"
group_by(education)#%>%
#summarize(estimate = sum(estimate, na.rm=T))
}
)
#B15002I = hispanic or Latino
#B15002H = white alone, not hispanic
#B15002B~G =
library(dplyr)
bay_total_2019<-
1:7 %>%
map_dfr(function(x){getCensus(
name = "acs/acs1", #five year survey
vintage = "2019",
region = "county: 081",#081= San Mateo  #all SF counties: 001,013,041,055,075, 081, 085, 095, 097
regionin = "state:06", #defining the state
vars = paste0("group(B15002", LETTERS[x],")")# SEX BY EDUCATIONAL ATTAINMENT FOR THE POPULATION 25 YEARS AND OVER (WHITE ALONE)
)%>%
select(ends_with("E") & -c(state,NAME))%>% # I only want columns that ends with "E" also get rid of state and NAME column; We want bay area total income from white. -c removes the field of state and NAME.
summarize_all(sum) %>%# we sum up all the columns; It's gotta be numbers
#we want to pivot the data into multiple rows and one column; make the dataset verticle
pivot_longer(
everything(),#pivot the entire data, everything will be transformed
names_to = "name",
values_to = "estimate" #household counts in this case.
)%>%
# Use data dictionary acs_vars_2019_5yr to join names from dictionary with our data
left_join(
acs_vars_2019_1yr %>%
select(name,label) #we only want "name" and "label" in the dataset.
)%>%
separate( #separate, we don't need Estimate!!Total:!!
label, #it's called label from acs_vars_2019_5yr
into = c(NA, NA, NA,"education"),
sep = "!!"  #we re cognize the third one(after Total:!!) is income
)%>%
select(-name)%>%
filter(estimate>0)%>% # at this point we don't want name anymore
filter(!is.na(education))%>%# got rid of empty field "NA"
group_by(education)#%>%
summarize(estimate = sum(estimate, na.rm=T))
}
)
#B15002I = hispanic or Latino
#B15002H = white alone, not hispanic
#B15002B~G =
library(dplyr)
bay_total_2019<-
1:7 %>%
map_dfr(function(x){getCensus(
name = "acs/acs1", #five year survey
vintage = "2019",
region = "county: 081",#081= San Mateo  #all SF counties: 001,013,041,055,075, 081, 085, 095, 097
regionin = "state:06", #defining the state
vars = paste0("group(B15002", LETTERS[x],")")# SEX BY EDUCATIONAL ATTAINMENT FOR THE POPULATION 25 YEARS AND OVER (WHITE ALONE)
)%>%
select(ends_with("E") & -c(state,NAME))%>% # I only want columns that ends with "E" also get rid of state and NAME column; We want bay area total income from white. -c removes the field of state and NAME.
summarize_all(sum) %>%# we sum up all the columns; It's gotta be numbers
#we want to pivot the data into multiple rows and one column; make the dataset verticle
pivot_longer(
everything(),#pivot the entire data, everything will be transformed
names_to = "name",
values_to = "estimate" #household counts in this case.
)%>%
# Use data dictionary acs_vars_2019_5yr to join names from dictionary with our data
left_join(
acs_vars_2019_1yr %>%
select(name,label) #we only want "name" and "label" in the dataset.
)%>%
separate( #separate, we don't need Estimate!!Total:!!
label, #it's called label from acs_vars_2019_5yr
into = c(NA, NA, NA,"education"),
sep = "!!"  #we re cognize the third one(after Total:!!) is income
)%>%
select(-name)%>%
filter(estimate>0)%>% # at this point we don't want name anymore
filter(!is.na(education))%>%# got rid of empty field "NA"
group_by(education)%>%
summarize(estimate = sum(estimate, na.rm=T))
}
)
#B15002I = hispanic or Latino
#B15002H = white alone, not hispanic
#B15002B~G =
library(dplyr)
bay_total_2019<-
1:7 %>%
map_dfr(function(x){getCensus(
name = "acs/acs1", #five year survey
vintage = "2019",
region = "county: 081",#081= San Mateo  #all SF counties: 001,013,041,055,075, 081, 085, 095, 097
regionin = "state:06", #defining the state
vars = paste0("group(B15002", LETTERS[x],")")# SEX BY EDUCATIONAL ATTAINMENT FOR THE POPULATION 25 YEARS AND OVER (WHITE ALONE)
)%>%
select(ends_with("E") & -c(state,NAME))%>% # I only want columns that ends with "E" also get rid of state and NAME column; We want bay area total income from white. -c removes the field of state and NAME.
summarize_all(sum) %>%# we sum up all the columns; It's gotta be numbers
#we want to pivot the data into multiple rows and one column; make the dataset verticle
pivot_longer(
everything(),#pivot the entire data, everything will be transformed
names_to = "name",
values_to = "estimate" #household counts in this case.
)%>%
# Use data dictionary acs_vars_2019_5yr to join names from dictionary with our data
left_join(
acs_vars_2019_1yr %>%
select(name,label) #we only want "name" and "label" in the dataset.
)%>%
separate( #separate, we don't need Estimate!!Total:!!
label, #it's called label from acs_vars_2019_5yr
into = c(NA, NA, NA,"education"),
sep = "!!"  #we re cognize the third one(after Total:!!) is income
)%>%
select(-name)%>%
filter(estimate>0)%>% # at this point we don't want name anymore
filter(!is.na(education))%>%# got rid of empty field "NA"
group_by(education)%>%
summarize(estimate = sum(estimate, na.rm=T)，education)
#B15002I = hispanic or Latino
#B15002H = white alone, not hispanic
#B15002B~G =
library(dplyr)
bay_total_2019<-
1:7 %>%
map_dfr(function(x){getCensus(
name = "acs/acs1", #five year survey
vintage = "2019",
region = "county: 081",#081= San Mateo  #all SF counties: 001,013,041,055,075, 081, 085, 095, 097
regionin = "state:06", #defining the state
vars = paste0("group(B15002", LETTERS[x],")")# SEX BY EDUCATIONAL ATTAINMENT FOR THE POPULATION 25 YEARS AND OVER (WHITE ALONE)
)%>%
select(ends_with("E") & -c(state,NAME))%>% # I only want columns that ends with "E" also get rid of state and NAME column; We want bay area total income from white. -c removes the field of state and NAME.
summarize_all(sum) %>%# we sum up all the columns; It's gotta be numbers
#we want to pivot the data into multiple rows and one column; make the dataset verticle
pivot_longer(
everything(),#pivot the entire data, everything will be transformed
names_to = "name",
values_to = "estimate" #household counts in this case.
)%>%
# Use data dictionary acs_vars_2019_5yr to join names from dictionary with our data
left_join(
acs_vars_2019_1yr %>%
select(name,label) #we only want "name" and "label" in the dataset.
)%>%
separate( #separate, we don't need Estimate!!Total:!!
label, #it's called label from acs_vars_2019_5yr
into = c(NA, NA, NA,"education"),
sep = "!!"  #we re cognize the third one(after Total:!!) is income
)%>%
select(-name)%>%
filter(estimate>0)%>% # at this point we don't want name anymore
filter(!is.na(education))%>%# got rid of empty field "NA"
group_by(education)%>%
summarize(estimate = sum(estimate, na.rm=T))
}
)
#B15002I = hispanic or Latino
#B15002H = white alone, not hispanic
#B15002B~G =
library(dplyr)
bay_total_2019<-
1:7 %>%
map_dfr(function(x){getCensus(
name = "acs/acs1", #five year survey
vintage = "2019",
region = "county: 081",#081= San Mateo  #all SF counties: 001,013,041,055,075, 081, 085, 095, 097
regionin = "state:06", #defining the state
vars = paste0("group(B15002", LETTERS[x],")")# SEX BY EDUCATIONAL ATTAINMENT FOR THE POPULATION 25 YEARS AND OVER (WHITE ALONE)
)%>%
select(ends_with("E") & -c(state,NAME))%>% # I only want columns that ends with "E" also get rid of state and NAME column; We want bay area total income from white. -c removes the field of state and NAME.
summarize_all(sum) %>%# we sum up all the columns; It's gotta be numbers
#we want to pivot the data into multiple rows and one column; make the dataset verticle
pivot_longer(
everything(),#pivot the entire data, everything will be transformed
names_to = "name",
values_to = "estimate" #household counts in this case.
)%>%
# Use data dictionary acs_vars_2019_5yr to join names from dictionary with our data
left_join(
acs_vars_2019_1yr %>%
select(name,label) #we only want "name" and "label" in the dataset.
)%>%
separate( #separate, we don't need Estimate!!Total:!!
label, #it's called label from acs_vars_2019_5yr
into = c(NA, NA, NA,"education"),
sep = "!!"  #we re cognize the third one(after Total:!!) is income
)%>%
select(-name)%>%
filter(!is.na(estimate))%>% # at this point we don't want name anymore
filter(!is.na(education))%>%# got rid of empty field "NA"
group_by(education)%>%
summarize(estimate = sum(estimate, na.rm=T))
}
)
#B15002I = hispanic or Latino
#B15002H = white alone, not hispanic
#B15002B~G =
library(dplyr)
bay_total_2019<-
1:7 %>%
map_dfr(function(x){getCensus(
name = "acs/acs1", #five year survey
vintage = "2019",
region = "county: 081",#081= San Mateo  #all SF counties: 001,013,041,055,075, 081, 085, 095, 097
regionin = "state:06", #defining the state
vars = paste0("group(B15002", LETTERS[x],")")# SEX BY EDUCATIONAL ATTAINMENT FOR THE POPULATION 25 YEARS AND OVER (WHITE ALONE)
)%>%
select(ends_with("E") & -c(state,NAME))%>% # I only want columns that ends with "E" also get rid of state and NAME column; We want bay area total income from white. -c removes the field of state and NAME.
summarize_all(sum) %>%# we sum up all the columns; It's gotta be numbers
#we want to pivot the data into multiple rows and one column; make the dataset verticle
pivot_longer(
everything(),#pivot the entire data, everything will be transformed
names_to = "name",
values_to = "estimate" #household counts in this case.
)%>%
# Use data dictionary acs_vars_2019_5yr to join names from dictionary with our data
left_join(
acs_vars_2019_1yr %>%
select(name,label) #we only want "name" and "label" in the dataset.
)%>%
separate( #separate, we don't need Estimate!!Total:!!
label, #it's called label from acs_vars_2019_5yr
into = c(NA, NA, NA,"education"),
sep = "!!"  #we re cognize the third one(after Total:!!) is income
)%>%
select(-name)%>%
filter(!is.na(estimate))%>% # at this point we don't want name anymore
filter(!is.na(education))#%>%# got rid of empty field "NA"
#group_by(education)%>%
#summarize(estimate = sum(estimate, na.rm=T))
}
)
#B15002I = hispanic or Latino
#B15002H = white alone, not hispanic
#B15002B~G =
bay_total_2019<-
1:7 %>%
map_dfr(function(x){getCensus(
name = "acs/acs1", #five year survey
vintage = "2019",
region = "county: 081",#081= San Mateo  #all SF counties: 001,013,041,055,075, 081, 085, 095, 097
regionin = "state:06", #defining the state
vars = paste0("group(B15002", LETTERS[x],")")# SEX BY EDUCATIONAL ATTAINMENT FOR THE POPULATION 25 YEARS AND OVER (WHITE ALONE)
)%>%
select(ends_with("E") & -c(state,NAME))%>% # I only want columns that ends with "E" also get rid of state and NAME column; We want bay area total income from white. -c removes the field of state and NAME.
summarize_all(sum) %>%# we sum up all the columns; It's gotta be numbers
#we want to pivot the data into multiple rows and one column; make the dataset verticle
pivot_longer(
everything(),#pivot the entire data, everything will be transformed
names_to = "name",
values_to = "estimate" #household counts in this case.
)%>%
# Use data dictionary acs_vars_2019_5yr to join names from dictionary with our data
left_join(
acs_vars_2019_1yr %>%
select(name,label) #we only want "name" and "label" in the dataset.
)%>%
separate( #separate, we don't need Estimate!!Total:!!
label, #it's called label from acs_vars_2019_5yr
into = c(NA, NA, NA,"education"),
sep = "!!"  #we re cognize the third one(after Total:!!) is income
)%>%
select(-name)%>%
filter(!is.na(estimate))%>% # at this point we don't want name anymore
filter(!is.na(education))#%>%# got rid of empty field "NA"
#group_by(education)%>%
#summarize(estimate = sum(estimate, na.rm=T))
}
)
#B15002I = hispanic or Latino
#B15002H = white alone, not hispanic
#B15002B~G =
bay_total_2019<-
1:7 %>%
map_dfr(function(x){getCensus(
name = "acs/acs1", #five year survey
vintage = "2019",
region = "county: 081",#081= San Mateo  #all SF counties: 001,013,041,055,075, 081, 085, 095, 097
regionin = "state:06", #defining the state
vars = paste0("group(B15002", LETTERS[x],")")# SEX BY EDUCATIONAL ATTAINMENT FOR THE POPULATION 25 YEARS AND OVER (WHITE ALONE)
)%>%
select(ends_with("E") & -c(state,NAME))%>% # I only want columns that ends with "E" also get rid of state and NAME column; We want bay area total income from white. -c removes the field of state and NAME.
summarize_all(sum) %>%# we sum up all the columns; It's gotta be numbers
#we want to pivot the data into multiple rows and one column; make the dataset verticle
pivot_longer(
everything(),#pivot the entire data, everything will be transformed
names_to = "name",
values_to = "estimate" #household counts in this case.
)%>%
# Use data dictionary acs_vars_2019_5yr to join names from dictionary with our data
left_join(
acs_vars_2019_1yr %>%
select(name,label) #we only want "name" and "label" in the dataset.
)%>%
separate( #separate, we don't need Estimate!!Total:!!
label, #it's called label from acs_vars_2019_5yr
into = c(NA, NA, NA,"education"),
sep = "!!"  #we re cognize the third one(after Total:!!) is income
)%>%
select(-name)%>%
filter(!is.na(estimate))%>% # at this point we don't want name anymore
filter(!is.na(education))#%>%# got rid of empty field "NA"
group_by(education)%>%
summarize(estimate = sum(estimate, na.rm=T))
}
)
#B15002I = hispanic or Latino
#B15002H = white alone, not hispanic
#B15002B~G =
bay_total_2019<-
1:7 %>%
map_dfr(function(x){getCensus(
name = "acs/acs1", #five year survey
vintage = "2019",
region = "county: 081",#081= San Mateo  #all SF counties: 001,013,041,055,075, 081, 085, 095, 097
regionin = "state:06", #defining the state
vars = paste0("group(B15002", LETTERS[x],")")# SEX BY EDUCATIONAL ATTAINMENT FOR THE POPULATION 25 YEARS AND OVER (WHITE ALONE)
)%>%
select(ends_with("E") & -c(state,NAME))%>% # I only want columns that ends with "E" also get rid of state and NAME column; We want bay area total income from white. -c removes the field of state and NAME.
summarize_all(sum) %>%# we sum up all the columns; It's gotta be numbers
#we want to pivot the data into multiple rows and one column; make the dataset verticle
pivot_longer(
everything(),#pivot the entire data, everything will be transformed
names_to = "name",
values_to = "estimate" #household counts in this case.
)%>%
# Use data dictionary acs_vars_2019_5yr to join names from dictionary with our data
left_join(
acs_vars_2019_1yr %>%
select(name,label) #we only want "name" and "label" in the dataset.
)%>%
separate( #separate, we don't need Estimate!!Total:!!
label, #it's called label from acs_vars_2019_5yr
into = c(NA, NA, NA,"education"),
sep = "!!"  #we re cognize the third one(after Total:!!) is income
)%>%
select(-name)%>%
filter(!is.na(estimate))%>% # at this point we don't want name anymore
filter(!is.na(education))%>%# got rid of empty field "NA"
group_by(education)%>%
summarize(estimate = sum(estimate, na.rm=T))
}
)
#B15002I = hispanic or Latino
#B15002H = white alone, not hispanic
#B15002B~G =
bay_total_2019<-
1:7 %>%
map_dfr(function(x){getCensus(
name = "acs/acs1", #five year survey
vintage = "2019",
region = "county: 081",#081= San Mateo  #all SF counties: 001,013,041,055,075, 081, 085, 095, 097
regionin = "state:06", #defining the state
vars = paste0("group(B15002", LETTERS[x],")")# SEX BY EDUCATIONAL ATTAINMENT FOR THE POPULATION 25 YEARS AND OVER (WHITE ALONE)
)%>%
select(ends_with("E") & -c(state,NAME))%>% # I only want columns that ends with "E" also get rid of state and NAME column; We want bay area total income from white. -c removes the field of state and NAME.
summarize_all(sum) %>%# we sum up all the columns; It's gotta be numbers
#we want to pivot the data into multiple rows and one column; make the dataset verticle
pivot_longer(
everything(),#pivot the entire data, everything will be transformed
names_to = "name",
values_to = "estimate" #household counts in this case.
)%>%
# Use data dictionary acs_vars_2019_5yr to join names from dictionary with our data
left_join(
acs_vars_2019_1yr %>%
select(name,label) #we only want "name" and "label" in the dataset.
)%>%
separate( #separate, we don't need Estimate!!Total:!!
label, #it's called label from acs_vars_2019_5yr
into = c(NA, NA, NA,"education"),
sep = "!!"  #we re cognize the third one(after Total:!!) is income
)%>%
select(-name)%>%
filter(!is.na(estimate))%>% # at this point we don't want name anymore
filter(!is.na(education))%>%# got rid of empty field "NA"
group_by(education)%>%
summarize(estimate = sum(estimate, na.rm=T), education=education)
}
)
clear library()
